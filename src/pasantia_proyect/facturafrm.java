/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pasantia_proyect;
import Controladores.Factura.DatabaseManager;
import Controladores.MyConnection;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author A19B59953
 */
public class facturafrm extends javax.swing.JFrame {
    
    private static facturafrm instanciaPrincipal;
   



    /** Creates new form facturafrm */
    public facturafrm() {
        initComponents();
        this.setLocationRelativeTo(null);
        mostrar("factura");
        instanciaPrincipal = this;
        this.setResizable(false);
    }
    
     public static facturafrm obtenerInstanciaPrincipal() {
        return instanciaPrincipal;
    }
      
     public void actualizarTabla() {
        mostrar("factura");
    }
     
     private DefaultTableModel tableModel;

    
  public void mostrar(String tabla) {
    if (tableModel == null) {
        tableModel = new DefaultTableModel();
        tableModel.addColumn("Id");
        tableModel.addColumn("Fecha");
        tableModel.addColumn("Categoria");
        tableModel.addColumn("Proveedor");
        tableModel.addColumn("Area");
        tableModel.addColumn("Monto");
        tableModel.addColumn("Comentario");
        jTable.setModel(tableModel);
        jTable.getColumnModel().getColumn(0).setMinWidth(0);
        jTable.getColumnModel().getColumn(0).setMaxWidth(0);
    } else {
        tableModel.setRowCount(0);
    }

    String sql = "select * from " + tabla;
    Statement st;
    MyConnection cc = new MyConnection();
    Connection cn = MyConnection.getConnection();

    try {
        st = cn.createStatement();
        ResultSet rs = st.executeQuery(sql);

        while (rs.next()) {
        String[] datos = new String[7];
        datos[0] = rs.getString(1);
        datos[1] = rs.getString(2); 
        datos[2] = obtenerNombreCategoria(rs.getInt(3));
        datos[3] = obtenerNombreProveedor(rs.getInt(4)); 
        datos[4] = obtenerNombreArea(rs.getInt(7));
        datos[5] = rs.getString(6); 
        datos[6] = rs.getString(5); 

            tableModel.addRow(datos);
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error" + e.toString());
    }
}
  
    
    public int obtenerIdFacturaSeleccionada() {
    int filaSeleccionada = jTable.getSelectedRow();
    if (filaSeleccionada != -1) {
        return Integer.parseInt(jTable.getValueAt(filaSeleccionada, 0).toString()); 
    } else {
        return -1; 
    }
}
    
    
   
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btn_act = new javax.swing.JButton();
        ver_btn = new javax.swing.JButton();
        btn_añadir = new javax.swing.JButton();
        btn_editar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 72, -1, 430));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/c.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, -1, -1));

        btn_act.setBackground(new java.awt.Color(51, 102, 0));
        btn_act.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-actualizar-40 (1).png"))); // NOI18N
        btn_act.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actActionPerformed(evt);
            }
        });
        getContentPane().add(btn_act, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, -1, -1));

        ver_btn.setBackground(new java.awt.Color(51, 102, 0));
        ver_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-ver-40.png"))); // NOI18N
        ver_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ver_btnActionPerformed(evt);
            }
        });
        getContentPane().add(ver_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 530, -1, -1));

        btn_añadir.setBackground(new java.awt.Color(51, 102, 0));
        btn_añadir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconagregar.png"))); // NOI18N
        btn_añadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_añadirActionPerformed(evt);
            }
        });
        getContentPane().add(btn_añadir, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 530, -1, -1));

        btn_editar.setBackground(new java.awt.Color(51, 102, 0));
        btn_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconeditar.png"))); // NOI18N
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 530, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("FACTURA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(jLabel2)
                .addContainerGap(206, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel2)
                .addContainerGap(540, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_actActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actActionPerformed
    
    }//GEN-LAST:event_btn_actActionPerformed

    private void ver_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ver_btnActionPerformed
     
    int idFacturaSeleccionada = obtenerIdFacturaSeleccionada();
    if (idFacturaSeleccionada != -1) {
        try {
            new AgregarEditarVerFactura(AgregarEditarVerFactura.VER, idFacturaSeleccionada).setVisible(true);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, seleccione una factura antes de ver sus datos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_ver_btnActionPerformed

    private void btn_añadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_añadirActionPerformed
         try {
        new AgregarEditarVerFactura(AgregarEditarVerFactura.AGREGAR, -1).setVisible(true);
    } catch (SQLException e) {
    }
    }//GEN-LAST:event_btn_añadirActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
       
     int idFacturaSeleccionada = obtenerIdFacturaSeleccionada();
    if (idFacturaSeleccionada != -1) {
        try {
          
            new AgregarEditarVerFactura(AgregarEditarVerFactura.EDITAR, idFacturaSeleccionada).setVisible(true);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, seleccione una factura antes de editar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
    }
    
    }//GEN-LAST:event_btn_editarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(facturafrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(facturafrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(facturafrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(facturafrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new facturafrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_act;
    private javax.swing.JButton btn_añadir;
    private javax.swing.JButton btn_editar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JButton ver_btn;
    // End of variables declaration//GEN-END:variables

    private String obtenerNombreArea(int idArea) {
    try {
     
        Map<Integer, String> areas = DatabaseManager.obtenerAreas();
        String nombreArea = areas.get(idArea);
        
        return nombreArea != null ? nombreArea : "Nombre no encontrado";
    } catch (SQLException e) {
      
        return "Error al obtener el nombre del área";
    }
}
    private String obtenerNombreProveedor(int idProveedor) {
    try {
        Map<Integer, String> proveedores = DatabaseManager.obtenerProveedores();
        String nombreProveedor = proveedores.get(idProveedor);
        return nombreProveedor != null ? nombreProveedor : "Proveedor no encontrado";
    } catch (SQLException e) {
        e.printStackTrace();
        return "Error al obtener el nombre del proveedor";
    }
}

private String obtenerNombreCategoria(int idCategoria) {
    try {
        Map<Integer, String> categorias = DatabaseManager.obtenerCategorias();
        String nombreCategoria = categorias.get(idCategoria);
        return nombreCategoria != null ? nombreCategoria : "Categoría no encontrada";
    } catch (SQLException e) {
        e.printStackTrace();
        return "Error al obtener el nombre de la categoría";
    }
}



}
