/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pasantia_proyect;

import Controladores.Area.ActualizarArea;
import static Controladores.Area.ActualizarArea.actualizarArea;
import Controladores.Area.AgregarArea;
import static Controladores.Area.AgregarArea.insertarArea;
import Controladores.Area.VerArea;
import entidades.Area;
import errores.ErrorGeneral;
import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author A19B59953
 */
public class AgregarEditarVerArea extends javax.swing.JFrame {

    public final static int AGREGAR = 1;
    public final static int EDITAR = 2;
    public final static int VER = 3;
    int opcion;
    private int id_area;
    
    
    /**
     * Creates new form AgregarEditarVerArea
     */
    public AgregarEditarVerArea() {
        initComponents();
        setLocationRelativeTo(null);
        this.setResizable(false);
    }
    
    
    public AgregarEditarVerArea(int opcion, int id_area)throws SQLException{
    this.opcion = opcion;
    this.id_area = id_area;
    initComponents();
    
    ArrayList<ErrorGeneral> errores = new ArrayList<>();
    
    switch (opcion){
    case AGREGAR:
    createParaAgregar();
    break;
    case EDITAR:
    createParaEditar();
    break;
    case VER:
    createParaVer();
    break;
    default:
    break;
    
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_regreso = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lbl_titulo = new javax.swing.JLabel();
        lbl_nombre1 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnagregar = new javax.swing.JButton();
        btn_regreso1 = new javax.swing.JButton();

        btn_regreso.setBackground(new java.awt.Color(51, 102, 0));
        btn_regreso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconregreso.png"))); // NOI18N
        btn_regreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_regresoActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 153, 0));

        lbl_titulo.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_titulo.setForeground(new java.awt.Color(255, 255, 255));
        lbl_titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_titulo.setText("AGREGAR AREA");
        lbl_titulo.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                lbl_titulover(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(lbl_titulo)
                .addContainerGap(138, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(lbl_titulo)
                .addGap(34, 34, 34))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 90));

        lbl_nombre1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lbl_nombre1.setText("Nombre");
        jPanel1.add(lbl_nombre1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, -1));

        txt_nombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_nombre.setBorder(null);
        jPanel1.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, 220, 30));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 220, 20));

        btnagregar.setBackground(new java.awt.Color(51, 102, 0));
        btnagregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconagregar.png"))); // NOI18N
        btnagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnagregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnagregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 420, -1, -1));

        btn_regreso1.setBackground(new java.awt.Color(51, 102, 0));
        btn_regreso1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconregreso.png"))); // NOI18N
        btn_regreso1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_regreso1ActionPerformed(evt);
            }
        });
        jPanel1.add(btn_regreso1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 420, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbl_titulover(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_lbl_titulover

    }//GEN-LAST:event_lbl_titulover

    private void btnagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnagregarActionPerformed
       if (opcion == AGREGAR) {
            agregarArea();
        } else if (opcion == EDITAR) {
            editarArea();
        }
    }//GEN-LAST:event_btnagregarActionPerformed

    private void btn_regresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_regresoActionPerformed
        
    }//GEN-LAST:event_btn_regresoActionPerformed

    private void btn_regreso1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_regreso1ActionPerformed
    this.setVisible(false);
    areafrm a = areafrm.obtenerInstanciaPrincipal();
    a.setVisible(true);
    a.actualizarTabla();
    }//GEN-LAST:event_btn_regreso1ActionPerformed

    public static void main(String [] args) throws SQLException {

    try {
    ArrayList<ErrorGeneral> errores = new ArrayList<>();
    new AgregarEditarVerArea(AgregarEditarVerCategoria.AGREGAR, 1).setVisible(true);
    new AgregarEditarVerArea(AgregarEditarVerCategoria.EDITAR, 5).setVisible(true);
    new AgregarEditarVerArea( AgregarEditarVerCategoria.VER, 1).setVisible(true);
    }catch (SQLException e) {
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_regreso;
    private javax.swing.JButton btn_regreso1;
    private javax.swing.JButton btnagregar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl_nombre1;
    private javax.swing.JLabel lbl_titulo;
    private javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables

    private void createParaAgregar() {
    lbl_titulo.setText("AGREGAR AREA");
    }

    private void createParaEditar() {
    lbl_titulo.setText("EDITAR AREA");
    btnagregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconeditar.png")));
    ArrayList<ErrorGeneral> errores = new ArrayList<>();
    rellenarVentana(id_area, errores);
    }

    private void createParaVer() {
    lbl_titulo.setText("VER AREA");
    lbl_titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lbl_titulo.setFont(new java.awt.Font("Tahoma", Font.BOLD, 18));
    txt_nombre.setEditable(false);
    btnagregar.setVisible(false);
      
    Font fuente = txt_nombre.getFont();
    float tamanoFuente = fuente.getSize() + 2; 
    txt_nombre.setFont(fuente.deriveFont(tamanoFuente));
    
    ArrayList<ErrorGeneral> errores = new ArrayList<>();
    rellenarVentana(id_area, errores);
    }
    
    private void rellenarVentana(int id_area, ArrayList<ErrorGeneral> errores) {
    this.area = VerArea.verAreas(id_area, errores);
    
    if (this.area != null) {
        txt_nombre.setText(area.getNombreArea());
    } else {
        System.out.println("Área no encontrada para el código: " + id_area);
    }
}

    private Area area;

    private void agregarArea() {
    String nombreArea = txt_nombre.getText();

    
    Area nuevaArea = new Area(0, nombreArea);
    areafrm pantalla = areafrm.obtenerInstanciaPrincipal();

    ArrayList<ErrorGeneral> errores = new ArrayList<>();

    int idAreaInsertada = AgregarArea.insertarArea(nuevaArea, errores);

    if (idAreaInsertada != -1) {
        JOptionPane.showMessageDialog(this, "Área agregada exitosamente con ID " + idAreaInsertada, "Éxito", JOptionPane.INFORMATION_MESSAGE);

        pantalla.actualizarTabla();
        pantalla.setVisible(true);
        this.dispose();
    } else {
        mostrarErrores(errores);
    }
}

private void editarArea() {
    String nombreArea = txt_nombre.getText(); // Obtén el nombre del área

    // Crea una nueva instancia de Area con el ID y el nombre
    Area areaAActualizar = new Area(id_area, nombreArea);
    
    areafrm pantalla = areafrm.obtenerInstanciaPrincipal(); // Obtén la instancia de la pantalla principal de áreas
    ArrayList<ErrorGeneral> errores = new ArrayList<>(); // Lista para almacenar errores

    // Llama al método de actualización de área
    int filasAfectadas = ActualizarArea.actualizarArea(areaAActualizar, errores);

    if (errores.isEmpty() && filasAfectadas > 0) {
        // Si no hay errores y se actualizaron filas correctamente, muestra un mensaje de éxito
        JOptionPane.showMessageDialog(this, "Área actualizada correctamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        
        pantalla.actualizarTabla(); // Actualiza la tabla en la pantalla principal
        pantalla.setVisible(true); // Hace visible la pantalla principal
        this.dispose(); // Cierra la pantalla actual
    } else {
        // Si hay errores, muestra los errores al usuario
        mostrarErrores(errores);
    }

    // Vuelve a llenar la ventana para reflejar los cambios en la pantalla actual
    rellenarVentana(id_area, new ArrayList<>());
}

    
  

    private static void mostrarErrores(ArrayList<ErrorGeneral> errores) {
    if (!errores.isEmpty()) {
        StringBuilder mensaje = new StringBuilder("Se han producido los siguientes errores:\n\n");

        for (ErrorGeneral error : errores) {
            mensaje.append("Error: ").append(error.getMensajeError()).append("\n");
            mensaje.append("Solución: ").append(error.getMensajeSolucion()).append("\n\n");
        }

        // Cambia el mensaje y el título del cuadro de diálogo según la pantalla de áreas
        JOptionPane.showMessageDialog(null, mensaje.toString(), "Errores en Áreas", JOptionPane.ERROR_MESSAGE);
    }
}

}
