/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pasantia_proyect;


import Controladores.Proveedor.ActualizarProveedor;
import Controladores.Proveedor.AgregarProveedor;
import Controladores.Proveedor.VerProveedor;
import entidades.Proveedor;
import errores.ErrorGeneral;
import java.awt.Font;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import utill.FuncionesGenerales;

/**
 *
 * @author A19B59953
 */
public class AgregarEditarVerProveedor extends javax.swing.JFrame {

    public final static int VER = 1;
    public final static int EDITAR = 2;
    public final static int AGREGAR = 3;
    int opcion;
    private int proveedorId;
    
    
   
    /**
     * Creates new form proveedor_dos
     */
    public AgregarEditarVerProveedor() {
        initComponents();
        setLocationRelativeTo(null);
        this.setResizable(false);
    }

   public AgregarEditarVerProveedor(int opcion, int proveedorId) throws SQLException {
        this.opcion = opcion;
        this.proveedorId = proveedorId;
        initComponents();

        ArrayList<ErrorGeneral> errores = new ArrayList<>();

        switch (opcion) {
            case VER:
                createParaVer();
                break;
            case EDITAR:
                createParaEditar();
                break;
            case AGREGAR:
                createParaAgregar();
                break;
            default:
                break;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_nombre = new javax.swing.JLabel();
        lbl_telefono = new javax.swing.JLabel();
        lbl_activo = new javax.swing.JLabel();
        lbl_credito = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        combo_ac = new javax.swing.JComboBox<>();
        btnregresar = new javax.swing.JButton();
        tLimiteDeCredito = new javax.swing.JFormattedTextField();
        tTelefono = new javax.swing.JFormattedTextField();
        btnagregar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lbl_titulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 500));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_nombre.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_nombre.setText("Nombre");
        jPanel1.add(lbl_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 89, -1, -1));

        lbl_telefono.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_telefono.setText("Teléfono");
        jPanel1.add(lbl_telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 185, -1, -1));

        lbl_activo.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_activo.setText("Estado activo");
        jPanel1.add(lbl_activo, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 402, -1, -1));

        lbl_credito.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_credito.setText("Límite de crédito");
        jPanel1.add(lbl_credito, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 283, -1, -1));

        txt_nombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_nombre.setBorder(null);
        txt_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nombreKeyTyped(evt);
            }
        });
        jPanel1.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 119, 230, 30));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 149, 230, 18));

        combo_ac.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        combo_ac.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "si", "no" }));
        combo_ac.setBorder(null);
        jPanel1.add(combo_ac, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 397, 60, 30));

        btnregresar.setBackground(new java.awt.Color(51, 102, 0));
        btnregresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons/icons8-volver-30.png"))); // NOI18N
        btnregresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnregresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnregresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 440, -1, -1));

        tLimiteDeCredito.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        tLimiteDeCredito.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        tLimiteDeCredito.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tLimiteDeCredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tLimiteDeCreditoActionPerformed(evt);
            }
        });
        jPanel1.add(tLimiteDeCredito, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 314, 230, 30));

        tTelefono.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        try {
            tTelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tTelefono.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tTelefonoActionPerformed(evt);
            }
        });
        jPanel1.add(tTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 215, 230, 30));

        btnagregar.setBackground(new java.awt.Color(51, 102, 0));
        btnagregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons/icons8-añadir-30.png"))); // NOI18N
        btnagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnagregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnagregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 440, -1, -1));

        jPanel2.setBackground(new java.awt.Color(0, 102, 0));

        lbl_titulo.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_titulo.setForeground(new java.awt.Color(255, 255, 255));
        lbl_titulo.setText("AGREGAR PROVEEDOR");
        lbl_titulo.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                ver(evt);
            }
        });
        jPanel2.add(lbl_titulo);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 49));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnregresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnregresarActionPerformed

    this.setVisible(false);
    proveedorfrm p = proveedorfrm.obtenerInstanciaPrincipal();
    p.setVisible(true);
    p.actualizarTabla();
    
    }//GEN-LAST:event_btnregresarActionPerformed

    private void tTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tTelefonoActionPerformed
      
    }//GEN-LAST:event_tTelefonoActionPerformed

    private void txt_nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombreKeyTyped

    }//GEN-LAST:event_txt_nombreKeyTyped

    private void tLimiteDeCreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tLimiteDeCreditoActionPerformed
    }//GEN-LAST:event_tLimiteDeCreditoActionPerformed

    private void btnagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnagregarActionPerformed
        // TODO add your handling code here:
         if (opcion == AGREGAR) {
            agregarProveedor();
        } else if (opcion == EDITAR) {
            editarProveedor();
        }
    }//GEN-LAST:event_btnagregarActionPerformed

    private void ver(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_ver

    }//GEN-LAST:event_ver

 public static void main(String[] args) {
    try {
        ArrayList<ErrorGeneral> errores = new ArrayList<>();
        new AgregarEditarVerProveedor(AgregarEditarVerProveedor.VER, 1).setVisible(true);
        new AgregarEditarVerProveedor(AgregarEditarVerProveedor.EDITAR, 1).setVisible(true);
        new AgregarEditarVerProveedor(AgregarEditarVerProveedor.AGREGAR, 2).setVisible(true);
    } catch (SQLException e) {
        e.printStackTrace();
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnagregar;
    private javax.swing.JButton btnregresar;
    private javax.swing.JComboBox<String> combo_ac;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lbl_activo;
    private javax.swing.JLabel lbl_credito;
    private javax.swing.JLabel lbl_nombre;
    private javax.swing.JLabel lbl_telefono;
    private javax.swing.JLabel lbl_titulo;
    private javax.swing.JFormattedTextField tLimiteDeCredito;
    private javax.swing.JFormattedTextField tTelefono;
    private javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables

   
    
    private void createParaVer() {
        lbl_titulo.setText("VER PROVEEDOR");
        tTelefono.setEditable(false);
        tLimiteDeCredito.setEditable(false);
        txt_nombre.setEditable(false);
        combo_ac.setEnabled(false);
        btnagregar.setEnabled(false);
        
        
        Font fuente = txt_nombre.getFont();
        float tamanoFuente = fuente.getSize() + 2; 
        txt_nombre.setFont(fuente.deriveFont(tamanoFuente));
        tTelefono.setFont(fuente.deriveFont(tamanoFuente));
        tLimiteDeCredito.setFont(fuente.deriveFont(tamanoFuente));
        combo_ac.setFont(fuente.deriveFont(tamanoFuente));
                
        ArrayList<ErrorGeneral> errores = new ArrayList<>();
        rellenarVentana(proveedorId, errores);
    }

    private void createParaAgregar() {
        lbl_titulo.setText("AGREGAR PROVEEDOR");
    }

    private void createParaEditar() {
        lbl_titulo.setText("EDITAR PROVEEDOR");
        btnagregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img//icons//icons8-editar-30.png")));
        ArrayList<ErrorGeneral> errores = new ArrayList<>();
        rellenarVentana(proveedorId, errores);
    }

    public void agregarProveedor() {
        Object value = tLimiteDeCredito.getValue();

        if (value != null) {
            Proveedor nuevoProveedor = new Proveedor(0, txt_nombre.getText(), tTelefono.getText(), combo_ac.getSelectedItem().equals("si"), FuncionesGenerales.getValueOf(tLimiteDeCredito.getValue()));
           
            proveedorfrm pantalla = proveedorfrm.obtenerInstanciaPrincipal();
       

            ArrayList<errores.ErrorGeneral> errores = new ArrayList<>();
            int idProveedorInsertado = AgregarProveedor.insertarProveedor(nuevoProveedor, errores);
            if (idProveedorInsertado != -1) {
                JOptionPane.showMessageDialog(this, "Proveedor agregado exitosamente con ID " + idProveedorInsertado, "Éxito", JOptionPane.INFORMATION_MESSAGE);
                
            pantalla.actualizarTabla();
            pantalla.setVisible(true);
            this.dispose();
                
            } else {
                mostrarErrores(errores);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un valor válido para el límite de crédito", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void actualizarComboBoxActivo(boolean estaActivo) {
    DefaultComboBoxModel<String> model = (DefaultComboBoxModel<String>) combo_ac.getModel();
    
    if (estaActivo) {
        combo_ac.setSelectedItem("si");
    } else {
        combo_ac.setSelectedItem("no");
        
     
    combo_ac.revalidate();
    combo_ac.repaint();
    }
}

    
 private void rellenarVentana(int codigoProveedor, ArrayList<ErrorGeneral> errores) {
     Proveedor proveedor = VerProveedor.verProveedor(proveedorId, errores);
     if (proveedor != null) {
         txt_nombre.setText(proveedor.getNombre());
         tTelefono.setText(proveedor.getTelefono());
         tLimiteDeCredito.setValue(proveedor.getLimiteCredito());
         combo_ac.setSelectedItem(proveedor.isEstaActivo() ? "Si" : "No");
         actualizarComboBoxActivo(proveedor.isEstaActivo());
     } else {
         
     }
}

    private proveedorfrm pantalla;

    private void editarProveedor() {
        Object value = tLimiteDeCredito.getValue();

    if (value != null) {
        String seleccion = (String) combo_ac.getSelectedItem();
        boolean estaActivo = combo_ac.getSelectedItem().equals("si");
        Proveedor proveedorAActualizar = new Proveedor(proveedorId, txt_nombre.getText(), tTelefono.getText(), estaActivo, FuncionesGenerales.getValueOf(tLimiteDeCredito.getValue()));
       
        proveedorfrm pantalla = proveedorfrm.obtenerInstanciaPrincipal();
       
        
        ArrayList<errores.ErrorGeneral> errores = new ArrayList<>();
        ActualizarProveedor.actualizarProveedor(proveedorAActualizar, errores);

        if (errores.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Proveedor actualizado correctamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            
            pantalla.actualizarTabla();
            pantalla.setVisible(true);
            this.dispose();
            
        } else {
            mostrarErrores(errores); 
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un valor válido para el límite de crédito", "Error", JOptionPane.ERROR_MESSAGE);
    }
    rellenarVentana(proveedorId, new ArrayList<>());
}
    
 private static void mostrarErrores(ArrayList<ErrorGeneral> errores) {
        if (!errores.isEmpty()) {
            StringBuilder mensaje = new StringBuilder("Se han producido los siguientes errores:\n\n");

            for (ErrorGeneral error : errores) {
                mensaje.append("Error: ").append(error.getMensajeError()).append("\n");
                mensaje.append("Solución: ").append(error.getMensajeSolucion()).append("\n\n");
            }

            JOptionPane.showMessageDialog(null, mensaje.toString(), "Errores", JOptionPane.ERROR_MESSAGE);
        }
    }
}   
     

